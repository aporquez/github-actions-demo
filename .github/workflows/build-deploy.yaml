name: .NET Core

on:  
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  AZURE_WEBAPP_NAME: porquez-demo    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'           # set this to the dot net version to use
  PUBLISH_PROJECT_PATH: 'src/MyAzureWebApp/MyAzureWebApp.csproj'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - uses: actions/checkout@main
   
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore '${{ env.PUBLISH_PROJECT_PATH }}'
          dotnet build '${{ env.PUBLISH_PROJECT_PATH }}' -c Release
          dotnet publish '${{ env.PUBLISH_PROJECT_PATH }}' --no-build --no-restore -c Release -o release/
          cd release/
          zip -r myapp.zip .

      # Publish artifact
      - uses: actions/upload-artifact@v4
        with:
          name: demo
          path: release/myapp.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: demo
        path: release

    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - uses: azure/webapps-deploy@v3
      with:
        app-name: '${{ env.AZURE_WEBAPP_NAME }}'
        package: 'release/myapp.zip'
        type: zip
        clean: true
        restart: true

    - name: Azure logout via Azure CLI
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az logout
          az cache purge
          az account clear